@page "/dashboard"
@using Iot.Greenhouse.Blazor.Components
@using Iot.Greenhouse.Devices
@using Iot.Greenhouse.Mqtt
@using Iot.Greenhouse.Nodes
@using Iot.Greenhouse.Sensors
@inherits GreenhouseComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IMqttService MqttService
@inject INodeService NodeService
@inject ISensorService SensorService
@inject IDeviceService DeviceService
@inject ISensorDataService SensorDataService
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject IDialogService DialogService
<div>
    <div class="mb-2">
        <FluentDesignSystemProvider AccentBaseColor="#00d700">
            @if (!Loaded)
            {
                <div class="d-flex justify-content-center text-center">
                    <div>
                        <FluentProgressRing Color="@OfficeColor.Excel.ToAttributeValue()" Width="500"></FluentProgressRing>
                    </div>
                </div>
            }
            else
            {
                <div class="row justify-content-md-center">
                    <div class="col-lg-4">
                        <div class="card m-0">
                            <div class="card-header">
                                <div class="h4">Nodes</div>
                            </div>
                            <div class="card-body">
                                <FluentAccordion>
                                    @foreach (var node in Nodes)
                                    {
                                        <FluentAccordionItem Expanded="true">
                                            <HeadingTemplate>
                                                <div class="h4 text-black">@node.Node.Name</div>
                                            </HeadingTemplate>
                                            <ChildContent>
                                                <div slot="end">
                                                    @if (node.IsOnline)
                                                    {
                                                        <FluentIcon Value="@(new Icons.Filled.Size20.Circle())" Color="Microsoft.FluentUI.AspNetCore.Components.Color.Success" />
                                                    }
                                                    else
                                                    {
                                                        <FluentIcon Value="@(new Icons.Regular.Size20.Circle())" Color="Microsoft.FluentUI.AspNetCore.Components.Color.Disabled" />
                                                    }
                                                </div>
                                                @if (node.Devices is not null && node.Devices.Count > 0)
                                                {
                                                    <FluentAccordion>
                                                        @foreach (var device in node.Devices)
                                                        {
                                                            <DeviceComponent Device="@device" Detail="true" TurnOn="TurnOnDevice" TurnOff="TurnOffDevice" />
                                                        }
                                                    </FluentAccordion>

                                                }
                                                @if (node.Sensors is not null && node.Sensors.Count > 0)
                                                {
                                                    <FluentAccordion>
                                                        @foreach (var sensor in node.Sensors)
                                                        {
                                                            <SensorComponent Sensor="@sensor" Detail="true"/>
                                                        }
                                                    </FluentAccordion>

                                                }
                                            </ChildContent>
                                        </FluentAccordionItem>

                                    }
                                </FluentAccordion>

                            </div>

                        </div>
                    </div>
                    <div class="col-lg-8 border-start">
                        <div class="card m-0">
                            <div>
                                <FluentCard class="diagram align-middle m-1">
                                    <img src="/images/grass.png" class="img-fluid" />

                                    @for (int i = 0; i < Nodes.Count; i++)
                                    {
                                        <div>
                                            <div class="my-node" id="node-@(i+1)">
                                                <div class="h4 text-center">
                                                    <a class="mt-4" href="/node-detail/@Nodes[i].Node.Id"><span class="h5">@Nodes[i].Node.Name</span></a>
                                                </div>

                                                @if (Nodes[i].Devices is not null && Nodes[i].Devices!.Count > 0)
                                                {
                                                    @foreach (var device in Nodes[i].Devices!)
                                                    {
                                                        @if (device.Device.DeviceType == DeviceType.Fan || device.Device.DeviceType == DeviceType.Light)
                                                        {
                                                            continue;
                                                        }
                                                        <DeviceComponent Device="device" Detail="false" TurnOn="TurnOnDevice" TurnOff="TurnOffDevice" />
                                                    }

                                                }
                                                @if (Nodes[i].Sensors is not null && Nodes[i].Sensors!.Count > 0)
                                                {
                                                    @foreach (var sensor in Nodes[i].Sensors!)
                                                    {
                                                        <SensorComponent Sensor="sensor" Detail="false" />
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                </FluentCard>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </FluentDesignSystemProvider>

    </div>
</div>
